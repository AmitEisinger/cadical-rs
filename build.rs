use std::io::Result;

fn main() -> Result<()> {
    // let version = std::fs::read_to_string("cadical/VERSION")?;

    cc::Build::new()
        .cpp(true)
        .define("NBUILD", None)
        .define("NDEBUG", None)
        .file("cadical/src/ccadical.cpp")
        .file("src/ccadical_ext.cpp")
        .file("cadical/src/version.cpp")
        .file("cadical/src/solver.cpp")
        .file("cadical/src/internal.cpp")
        .file("cadical/src/arena.cpp")
        .file("cadical/src/proof.cpp")
        .file("cadical/src/limit.cpp")
        .file("cadical/src/options.cpp")
        .file("cadical/src/stats.cpp")
        .file("cadical/src/message.cpp")
        .file("cadical/src/resources.cpp")
        .file("cadical/src/external.cpp")
        .file("cadical/src/profile.cpp")
        .file("cadical/src/terminal.cpp")
        .file("cadical/src/clause.cpp")
        .file("cadical/src/backtrack.cpp")
        .file("cadical/src/phases.cpp")
        .file("cadical/src/report.cpp")
        .file("cadical/src/flags.cpp")
        .file("cadical/src/solution.cpp")
        .file("cadical/src/assume.cpp")
        .file("cadical/src/queue.cpp")
        .file("cadical/src/checker.cpp")
        .file("cadical/src/score.cpp")
        .file("cadical/src/lucky.cpp")
        .file("cadical/src/propagate.cpp")
        .file("cadical/src/analyze.cpp")
        .file("cadical/src/ema.cpp")
        .file("cadical/src/averages.cpp")
        .file("cadical/src/minimize.cpp")
        .file("cadical/src/extend.cpp")
        .file("cadical/src/restore.cpp")
        .file("cadical/src/walk.cpp")
        .file("cadical/src/watch.cpp")
        .file("cadical/src/decide.cpp")
        .file("cadical/src/collect.cpp")
        .file("cadical/src/var.cpp")
        .file("cadical/src/condition.cpp")
        .file("cadical/src/occs.cpp")
        .file("cadical/src/subsume.cpp")
        .file("cadical/src/elim.cpp")
        .file("cadical/src/cover.cpp")
        .file("cadical/src/block.cpp")
        .file("cadical/src/backward.cpp")
        .file("cadical/src/vivify.cpp")
        .file("cadical/src/probe.cpp")
        .file("cadical/src/decompose.cpp")
        .file("cadical/src/rephase.cpp")
        .file("cadical/src/reduce.cpp")
        .file("cadical/src/gates.cpp")
        .file("cadical/src/deduplicate.cpp")
        .file("cadical/src/restart.cpp")
        .file("cadical/src/ternary.cpp")
        .file("cadical/src/transred.cpp")
        .file("cadical/src/instantiate.cpp")
        .file("cadical/src/bins.cpp")
        .file("cadical/src/compact.cpp")
        .compile("ccadical");
    Ok(())
}
